================================================================================
			Token:SEPARATOR	Lexeme:$$
================================================================================
<Rat25S> -> $$ <Opt Function Definitions> $$ <Opt Declaration List> $$ <Statement List>$$
<Rat25S> -> $$ <Opt Function Definitions>
<Opt Function Definitions> -> <Function Definitions>
<Function Definitions> -> <Function> <FD>
================================================================================
			Token:KEYWORD	Lexeme:function
================================================================================
<Function> -> function <Identifier> ( <Opt Parameter List> ) <Opt Declaration List> <Body>
<Function> -> function <Identifier>
================================================================================
			Token:IDENTIFIER	Lexeme:convertx
================================================================================
<Identifier> -> Identifier
================================================================================
			Token:SEPARATOR	Lexeme:(
================================================================================
( <Opt Parameter List>
<Opt Parameter List> -> <Parameter List>
<Parameter List> -> <Parameter> <P>
<Parameter> -> <IDs> <Qualifier>
<IDs> -> <Identifier> <id>
================================================================================
			Token:IDENTIFIER	Lexeme:fahr
================================================================================
<Identifier> -> Identifier
<id> -> ε
================================================================================
			Token:KEYWORD	Lexeme:integer
================================================================================
<Qualifier> -> integer | boolean | real
<P> -> ε
================================================================================
			Token:SEPARATOR	Lexeme:)
================================================================================
) <Opt Declaration List>
<Opt Declaration List> -> <Empty>
<Body>
================================================================================
			Token:SEPARATOR	Lexeme:{
================================================================================
<Body> -> { <Statement List> }
<Body> -> { <Statement List>
<Statement List> -> <Statement> <S>
================================================================================
			Token:KEYWORD	Lexeme:return
================================================================================
<Statement> -> <Return>
<Return> -> return <r>
<Return> -> return
<r> -> <Expression> ;
<Expression> -> <Term> <E>
<Term> -> <Factor> <T>
<Factor> -> <Primary>
================================================================================
			Token:INTEGER	Lexeme:5
================================================================================
<Primary> -> <INTEGER> | <REAL> | <IDENTIFIER> | true, false
================================================================================
			Token:OPERATOR	Lexeme:*
================================================================================
<T> -> * <Factor> <T> | / <Factor> <T>
<Factor> -> <Primary>
================================================================================
			Token:IDENTIFIER	Lexeme:fahr
================================================================================
<Primary> -> <INTEGER> | <REAL> | <IDENTIFIER> | true, false
<T> -> ε
================================================================================
			Token:OPERATOR	Lexeme:-
================================================================================
<E> -> + <Term> <E> | - <Term><E>
<Term> -> <Factor> <T>
<Factor> -> <Primary>
================================================================================
			Token:INTEGER	Lexeme:32
================================================================================
<Primary> -> <INTEGER> | <REAL> | <IDENTIFIER> | true, false
================================================================================
			Token:OPERATOR	Lexeme:/
================================================================================
<T> -> * <Factor> <T> | / <Factor> <T>
<Factor> -> <Primary>
================================================================================
			Token:INTEGER	Lexeme:9
================================================================================
<Primary> -> <INTEGER> | <REAL> | <IDENTIFIER> | true, false
<T> -> ε
<E> -> ε
================================================================================
			Token:SEPARATOR	Lexeme:;
================================================================================
;
End of <Return>
<S> -> ε
================================================================================
			Token:SEPARATOR	Lexeme:}
================================================================================
}
End of Body
End of Function
<FD> -> ε
================================================================================
			Token:SEPARATOR	Lexeme:$$
================================================================================
$$ <Opt Declaration List>
<Opt Declaration List> -> <Declaration List>
<Declaration List> -> <Declaration> ; <D>
<Declaration> -> <Qualifier> <IDs>
================================================================================
			Token:KEYWORD	Lexeme:integer
================================================================================
<Qualifier> -> integer | boolean | real
<IDs> -> <Identifier> <id>
================================================================================
			Token:IDENTIFIER	Lexeme:low
================================================================================
<Identifier> -> Identifier
================================================================================
			Token:SEPARATOR	Lexeme:,
================================================================================
<id> -> , <IDs>
<IDs> -> <Identifier> <id>
================================================================================
			Token:IDENTIFIER	Lexeme:high
================================================================================
<Identifier> -> Identifier
================================================================================
			Token:SEPARATOR	Lexeme:,
================================================================================
<id> -> , <IDs>
<IDs> -> <Identifier> <id>
================================================================================
			Token:IDENTIFIER	Lexeme:step
================================================================================
<Identifier> -> Identifier
<id> -> ε
================================================================================
			Token:SEPARATOR	Lexeme:;
================================================================================
; <D>
<D> -> ε
================================================================================
			Token:SEPARATOR	Lexeme:$$
================================================================================
$$ <Statement List>
<Statement List> -> <Statement> <S>
================================================================================
			Token:KEYWORD	Lexeme:scan
================================================================================
<Statement> -> <Scan>
<Scan> -> scan ( <IDs> );
<Scan> -> scan
================================================================================
			Token:SEPARATOR	Lexeme:(
================================================================================
( <IDs>
<IDs> -> <Identifier> <id>
================================================================================
			Token:IDENTIFIER	Lexeme:low
================================================================================
<Identifier> -> Identifier
================================================================================
			Token:SEPARATOR	Lexeme:,
================================================================================
<id> -> , <IDs>
<IDs> -> <Identifier> <id>
================================================================================
			Token:IDENTIFIER	Lexeme:high
================================================================================
<Identifier> -> Identifier
================================================================================
			Token:SEPARATOR	Lexeme:,
================================================================================
<id> -> , <IDs>
<IDs> -> <Identifier> <id>
================================================================================
			Token:IDENTIFIER	Lexeme:step
================================================================================
<Identifier> -> Identifier
<id> -> ε
================================================================================
			Token:SEPARATOR	Lexeme:)
================================================================================
)
================================================================================
			Token:SEPARATOR	Lexeme:;
================================================================================
;
End of Scan
<S> -> <Statement List>
<Statement List> -> <Statement> <S>
================================================================================
			Token:KEYWORD	Lexeme:while
================================================================================
<Statement> -> <While>
<While> -> while ( <Condition> ) <Statement> endwhile
<While> -> while
================================================================================
			Token:SEPARATOR	Lexeme:(
================================================================================
( <Condition>
<Condition> -> <Expression> <Relop> <Expression>
<Expression> -> <Term> <E>
<Term> -> <Factor> <T>
<Factor> -> <Primary>
================================================================================
			Token:IDENTIFIER	Lexeme:low
================================================================================
<Primary> -> <INTEGER> | <REAL> | <IDENTIFIER> | true, false
<T> -> ε
<E> -> ε
================================================================================
			Token:OPERATOR	Lexeme:<=
================================================================================
<Relop> -> == | != | > | < | <= | =>
<Expression> -> <Term> <E>
<Term> -> <Factor> <T>
<Factor> -> <Primary>
================================================================================
			Token:IDENTIFIER	Lexeme:high
================================================================================
<Primary> -> <INTEGER> | <REAL> | <IDENTIFIER> | true, false
<T> -> ε
<E> -> ε
================================================================================
			Token:SEPARATOR	Lexeme:)
================================================================================
) <Statement>
================================================================================
			Token:SEPARATOR	Lexeme:{
================================================================================
<Statement> -> <Compound>
<Compound> -> { <Statement List> }
<Compound> -> { <Statement List>
<Statement List> -> <Statement> <S>
================================================================================
			Token:KEYWORD	Lexeme:print
================================================================================
<Statement> -> <Print>
<Print> -> print ( <Expression> )
<Print> -> print
================================================================================
			Token:SEPARATOR	Lexeme:(
================================================================================
( <Expression>
<Expression> -> <Term> <E>
<Term> -> <Factor> <T>
<Factor> -> <Primary>
================================================================================
			Token:IDENTIFIER	Lexeme:low
================================================================================
<Primary> -> <INTEGER> | <REAL> | <IDENTIFIER> | true, false
<T> -> ε
<E> -> ε
================================================================================
			Token:SEPARATOR	Lexeme:)
================================================================================
)
End of Print
<S> -> <Statement List>
<Statement List> -> <Statement> <S>
================================================================================
			Token:KEYWORD	Lexeme:print
================================================================================
<Statement> -> <Print>
<Print> -> print ( <Expression> )
<Print> -> print
================================================================================
			Token:SEPARATOR	Lexeme:(
================================================================================
( <Expression>
<Expression> -> <Term> <E>
<Term> -> <Factor> <T>
<Factor> -> <Primary>
================================================================================
			Token:IDENTIFIER	Lexeme:low
================================================================================
<Primary> -> <INTEGER> | <REAL> | <IDENTIFIER> | true, false
<T> -> ε
<E> -> ε
================================================================================
			Token:SEPARATOR	Lexeme:)
================================================================================
)
End of Print
<S> -> <Statement List>
<Statement List> -> <Statement> <S>
================================================================================
			Token:IDENTIFIER	Lexeme:low
================================================================================
<Statement> -> <Assign>
<Assign> -> <Identifier> = <Expression> ;
<Assign> -> <Identifier>
================================================================================
			Token:OPERATOR	Lexeme:=
================================================================================
= <Expression> ;
<Expression> -> <Term> <E>
<Term> -> <Factor> <T>
<Factor> -> <Primary>
================================================================================
			Token:IDENTIFIER	Lexeme:low
================================================================================
<Primary> -> <INTEGER> | <REAL> | <IDENTIFIER> | true, false
<T> -> ε
================================================================================
			Token:OPERATOR	Lexeme:+
================================================================================
<E> -> + <Term> <E> | - <Term><E>
<Term> -> <Factor> <T>
<Factor> -> <Primary>
================================================================================
			Token:IDENTIFIER	Lexeme:step
================================================================================
<Primary> -> <INTEGER> | <REAL> | <IDENTIFIER> | true, false
<T> -> ε
<E> -> ε
================================================================================
			Token:SEPARATOR	Lexeme:;
================================================================================
;
End of Assign
<S> -> ε
================================================================================
			Token:SEPARATOR	Lexeme:}
================================================================================
}
End of Compound
================================================================================
			Token:KEYWORD	Lexeme:endwhile
================================================================================
endwhile
<S> -> ε
================================================================================
			Token:SEPARATOR	Lexeme:$$
================================================================================
$$
Parse complete: Correct syntax
